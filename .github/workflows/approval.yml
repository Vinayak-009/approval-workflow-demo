name: Manual Approval Workflow

on:
  push:
    branches:
      - main  # The workflow will trigger on pushes to the 'main' branch

jobs:
  prepare-deployment:
    runs-on: ubuntu-latest
    outputs:
      commit_message: ${{ steps.extract_commit.outputs.COMMIT_MESSAGE }}
    steps:
      # Checkout the repository's code
      - name: Checkout Code
        id: checkout
        uses: actions/checkout@v3

      # Deploy to staging (dummy step here)
      - name: Deploy to Staging
        run: |
          echo "Deploying code to staging environment..."
      - name: Set up Terraform
        id: setup_terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.5

      - name: Terraform Init
        id: terraform_init
        run: terraform init

      - name: Terraform Plan
        id: terraform_plan
        run: terraform plan -out=tfplan | tee terraform_plan.txt
      
      - name: Extract Terraform Changes
        id: extract_changes
        run: |
          grep -E '(\+|\-|\~)' terraform_plan.txt > terraform_changes.txt
          if [ -s "terraform_changes.txt" ]; then
            echo "Terraform changes:"
            cat terraform_changes.txt
          else
            echo "No Terraform changes detected"
          fi
        
      - name: Extract Commit Message
        id: extract_commit
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT

  deploy-to-production:
    runs-on: ubuntu-latest
    needs: prepare-deployment
    permissions:
      id-token: 'write'
      contents: 'read'
    environment:
      name: production
    steps:
      # Manual approval step
      - name: Wait for approval to deploy to production
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.NEW_APPROVE_SECRET }}  # Use the secret token for approval
          approvers: Harish-0012  # Replace with real GitHub usernames or teams
          minimum-approvals: 1
          issue-title: "Approve deployment to production"
          issue-body: "Please approve or deny the deployment of the latest code to production."
          exclude-workflow-initiator-as-approver: true

      - name: Configure GCP Credentials
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/554761590655/locations/global/workloadIdentityPools/new-pool/providers/github-oidc-provider'
          service_account: 'github-wif@no-migration.iam.gserviceaccount.com'

      - name: Display Full Output
        run: |
          echo "-------------------------------------------------"
          echo "                   Workflow Summary               "
          echo "-------------------------------------------------"
          echo "Commit Message:"
          echo "${{ needs.prepare-deployment.outputs.commit_message }}"
          echo "-------------------------------------------------"
          echo "Checkout Code Step"
          echo "Time: $(date +%Y-%m-%d-%H-%M-%S)"
          echo "-------------------------------------------------"
          echo "Set up Terraform Step"
          echo "Time: $(date +%Y-%m-%d-%H-%M-%S)"
          echo "-------------------------------------------------"
          echo "Terraform Init Step"
          echo "Time: $(date +%Y-%m-%d-%H-%M-%S)"
          echo "-------------------------------------------------"
           echo "Terraform Plan Step"
          echo "Time: $(date +%Y-%m-%d-%H-%M-%S)"
          echo "-------------------------------------------------"
          echo "Terraform Plan Output:"
          cat tfplan
          echo "-------------------------------------------------"
          echo "Extracted Terraform Changes Output:"
          cat terraform_changes.txt
          echo "-------------------------------------------------"

      - name: Terraform Apply
        run: terraform apply tfplan
