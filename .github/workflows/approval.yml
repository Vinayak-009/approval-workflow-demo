name: Terraform Deployment with Manual Approval

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  terraform-deploy-with-approval:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout Code
        id: checkout
        uses: actions/checkout@v3

      - name: Configure GCP Credentials
        id: configure_gcp
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/554761590655/locations/global/workloadIdentityPools/new-pool/providers/github-oidc-provider'
          service_account: 'github-wif@no-migration.iam.gserviceaccount.com'

      - name: Set up Terraform
        id: setup_terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.5

      - name: Terraform Init
        id: terraform_init
        run: terraform init

      - name: Terraform Plan
        id: terraform_plan
        run: terraform plan -out=tfplan | tee terraform_plan.txt
      
      - name: Extract Terraform Changes
        id: extract_changes
        run: |
          grep -E '(\+|\-|\~)' terraform_plan.txt > terraform_changes.txt
          if [ -s "terraform_changes.txt" ]; then
            echo "Terraform changes:"
            cat terraform_changes.txt
             # Base64 encode the CHANGES
            ENCODED_CHANGES=$(cat terraform_changes.txt | base64)
            echo "CHANGES=$ENCODED_CHANGES" >> $GITHUB_OUTPUT
          else
            echo "No Terraform changes detected"
             echo "CHANGES=No Terraform changes detected" >> $GITHUB_OUTPUT
          fi
        
      - name: Extract Commit Message
        id: extract_commit
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV

      - name: Display Full Output
        run: |
          echo "-------------------------------------------------"
          echo "                   Workflow Summary               "
          echo "-------------------------------------------------"
          echo "Commit Message:"
          echo "${{ env.COMMIT_MESSAGE }}"
          echo "-------------------------------------------------"
          echo "Checkout Code Step"
          echo "Time: $(date +%Y-%m-%d-%H-%M-%S)"
          echo "-------------------------------------------------"
          echo "Configure GCP Credentials Step"
          echo "Time: $(date +%Y-%m-%d-%H-%M-%S)"
          echo "-------------------------------------------------"
          echo "Set up Terraform Step"
          echo "Time: $(date +%Y-%m-%d-%H-%M-%S)"
          echo "-------------------------------------------------"
          echo "Terraform Init Step"
          echo "Time: $(date +%Y-%m-%d-%H-%M-%S)"
          echo "-------------------------------------------------"
          echo "Terraform Plan Step"
          echo "Time: $(date +%Y-%m-%d-%H-%M-%S)"
          echo "-------------------------------------------------"
          echo "Terraform Plan Output:"
          cat terraform_plan.txt
          echo "-------------------------------------------------"
           echo "Extracted Terraform Changes Output:"
          # decode the changes so that they are displayed properly
          echo "${{ steps.extract_changes.outputs.CHANGES }}" | base64 --decode
          echo "-------------------------------------------------"
    
      - name: Wait for approval to deploy to production
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.NEW_APPROVE_SECRET }}
          approvers: "Harish-0012"
          minimum-approvals: 1
          issue-title: "Approve deployment to production"
          issue-body: |
           Please approve or deny the deployment of the latest code to production.
           Workflow is pending manual review.
           URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
           Required approvers: [Harish-0012]
           Respond "approved", "approve", "lgtm", "yes" to continue workflow or "denied", "deny", "no" to cancel.

           Terraform Changes:
           ```
            ${{ steps.extract_changes.outputs.CHANGES }}
           ```

      - name: Terraform Apply
        run: terraform apply tfplan
